# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-25 16:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BudgetItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Название статьи')),
            ],
            options={
                'verbose_name_plural': 'Статьи бюджета',
                'verbose_name': 'Статья бюджета',
            },
        ),
        migrations.CreateModel(
            name='BudgetSubitem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Название статьи')),
                ('parent_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subitems', to='td.BudgetItem', verbose_name='Родительская статья бюджета')),
            ],
            options={
                'verbose_name_plural': 'Статьи расходов',
                'verbose_name': 'Статья расходов',
            },
        ),
        migrations.CreateModel(
            name='BudgetValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('month', models.IntegerField(choices=[(1, 'Январь'), (2, 'Февраль'), (3, 'Март'), (4, 'Апрель'), (5, 'Май'), (6, 'Июнь'), (7, 'Июль'), (8, 'Август'), (9, 'Сентябрь'), (10, 'Октябрь'), (11, 'Ноябрь'), (12, 'Декабрь')], verbose_name='Месяц')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма')),
                ('budget_subitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.BudgetSubitem', verbose_name='Статья расходов')),
            ],
            options={
                'verbose_name_plural': 'Значения бюджета',
                'verbose_name': 'Знечение бюджета',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('name', models.CharField(max_length=100, verbose_name='Модель')),
                ('number', models.CharField(default='', max_length=20, verbose_name='Гос. номер')),
                ('vin', models.CharField(blank=True, max_length=50, null=True, verbose_name='VIN')),
                ('description', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Описание/комментарии')),
                ('release_year', models.IntegerField(blank=True, default=2000, null=True, verbose_name='Год выпуска')),
                ('power', models.IntegerField(blank=True, default=0, null=True, verbose_name='Мощность, л.с.')),
                ('engine_volume', models.FloatField(blank=True, default=0, null=True, verbose_name='Объем двигателя, л')),
                ('to_mileage', models.IntegerField(blank=True, default=0, null=True, verbose_name='Пробег между ТО')),
                ('mileage_limit', models.IntegerField(blank=True, null=True, verbose_name='Ограничение пробега')),
                ('fuel_type', models.CharField(blank=True, choices=[('0', 'Бензин'), ('1', 'Дизель')], default='0', max_length=1, null=True, verbose_name='Тип топлива')),
                ('pts_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='ПТС номер')),
                ('pts_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='ПТС место хранения')),
                ('pts_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='ПТС скан')),
                ('sts_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='СТС номер')),
                ('sts_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='СТС место хранения')),
                ('sts_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='СТС скан')),
                ('diag_card_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Диагн. карта номер')),
                ('diag_card_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='Диагн. карта место хранен.')),
                ('diag_card_date', models.DateField(blank=True, null=True, verbose_name='Диагн. карта до')),
                ('diag_card_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='Диагн. карта скан')),
                ('osago_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='ОСАГО номер')),
                ('osago_date', models.DateField(blank=True, null=True, verbose_name='ОСАГО до')),
                ('osago_company', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Страховая компания ОСАГО')),
                ('osago_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='ОСАГО место хранения')),
                ('osago_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='ОСАГО скан')),
                ('kasko_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='КАСКО номер')),
                ('kasko_date', models.DateField(blank=True, null=True, verbose_name='КАСКО до')),
                ('kasko_company', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Страховая компания КАСКО')),
                ('kasko_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='КАСКО место хранения')),
                ('kasko_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='КАСКО скан')),
                ('fuel_card_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Топливная карта номер')),
                ('fuel_card_pin', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Топливная карта PIN')),
                ('fuel_card_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='Топливная карта место хранения')),
                ('fuel_card_date', models.DateField(blank=True, null=True, verbose_name='Топливная карта до')),
                ('fuel_card_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='Топливная карта скан')),
                ('corp_card_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Корпоративная карта номер')),
                ('corp_card_pin', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Корпоративная карта PIN')),
                ('corp_card_place', models.CharField(blank=True, choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, null=True, verbose_name='Корпоративная карта')),
                ('corp_card_scan', models.ImageField(blank=True, null=True, upload_to='scans/documents/', verbose_name='Корпоративная карта скан')),
                ('alarm_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Номер маяка сигнализации')),
                ('alarm_sim_number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Номер SIM-карты маяка')),
                ('tires_storage', models.CharField(blank=True, choices=[('0', ' '), ('1', 'Динамика М'), ('2', 'У водителя в гараже/дома'), ('3', 'ТРК Щука')], default='0', max_length=1, null=True, verbose_name='Место хранения колес')),
                ('tires_summer_state', models.CharField(blank=True, choices=[('0', 'да'), ('1', 'да (с дисками)'), ('2', 'нет'), ('3', 'нет (диски есть)')], default='0', max_length=1, null=True, verbose_name='Летние колеса, наличие')),
                ('tires_summer_date', models.DateField(blank=True, null=True, verbose_name='Летние колеса, срок действия')),
                ('tires_winter_state', models.CharField(blank=True, choices=[('0', 'да'), ('1', 'да (с дисками)'), ('2', 'нет'), ('3', 'нет (диски есть)')], default='0', max_length=1, null=True, verbose_name='Зимние колеса, наличие')),
                ('tires_winter_date', models.DateField(blank=True, null=True, verbose_name='Зимние колеса, срок действия')),
                ('tires_comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарии к колесам')),
                ('vip_pass', models.BooleanField(default=False, verbose_name='VIP-пропуск')),
                ('ownership_type', models.CharField(choices=[('0', 'Собственность ГОРН'), ('1', 'Собственность ФЛ, в аренде ГОРН'), ('2', 'Собственность ФЛ')], default='0', max_length=1, verbose_name='Тип собственности')),
                ('rent_contract', models.CharField(choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, verbose_name='Договор аренды автотранспортного средства без экипажа')),
                ('rent_contract2', models.CharField(choices=[('0', 'нет / не должно быть'), ('1', 'оригинал в машине/на руках у водителей'), ('2', 'оригинал в бухгалтерии'), ('3', 'оригинал в архиве, документ не действительный')], default='0', max_length=1, verbose_name='Договор на предоставление информационных, диспетчерских и технологических услуг')),
            ],
            options={
                'verbose_name_plural': 'Автомобили',
                'verbose_name': 'Автомобиль',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Комментарий')),
                ('license', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Вод. удостоверение')),
                ('license_date', models.DateField(verbose_name='Вод. удостоверение до')),
                ('phone', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Телефон')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/', verbose_name='Фото')),
                ('emp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.Employee', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name_plural': 'Водители',
                'verbose_name': 'Водитель',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Сумма')),
                ('active', models.BooleanField(default=True, verbose_name='Активна')),
                ('comment', models.CharField(blank=True, default='', max_length=100, verbose_name='Комментарий')),
                ('budget_subitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.BudgetSubitem', verbose_name='Статья расходов')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Driver', verbose_name='Водитель')),
            ],
            options={
                'verbose_name_plural': 'Расходы',
                'verbose_name': 'Расход',
            },
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Номер')),
                ('comment', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Комментарий')),
                ('active', models.BooleanField(default=True, verbose_name='Активен')),
                ('scan', models.ImageField(blank=True, null=True, upload_to='scans/keycards/', verbose_name='Скан')),
                ('type', models.CharField(choices=[('car-key', 'Ключ от автомобиля'), ('alarm-key', 'Ключ от сигнализации'), ('key-card', 'Ключ-карта'), ('parking-key', 'Пропуск на парковку')], max_length=50, verbose_name='Тип ключа')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.Employee', verbose_name='Владелец')),
            ],
            options={
                'verbose_name_plural': 'Ключи',
                'verbose_name': 'Ключ',
            },
        ),
        migrations.CreateModel(
            name='Mileage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('month', models.IntegerField(choices=[(1, 'Январь'), (2, 'Февраль'), (3, 'Март'), (4, 'Апрель'), (5, 'Май'), (6, 'Июнь'), (7, 'Июль'), (8, 'Август'), (9, 'Сентябрь'), (10, 'Октябрь'), (11, 'Ноябрь'), (12, 'Декабрь')], verbose_name='Месяц')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Значение')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name_plural': 'Пробеги',
                'verbose_name': 'Пробег',
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Номер машиноместа')),
                ('car_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Автомобиль')),
                ('payment_type', models.IntegerField(blank=True, choices=[(0, '100%'), (1, 'частично')], null=True, verbose_name='Условия оплаты')),
                ('contract', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Договор')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Срок договора')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Employee', verbose_name='За кем акреплено')),
            ],
            options={
                'verbose_name_plural': 'Парковочные места',
                'verbose_name': 'Парковочное место',
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, verbose_name='Номер постановления')),
                ('date', models.DateField(verbose_name='Дата')),
                ('description', models.CharField(max_length=100, verbose_name='Нарушение')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Сумма')),
                ('obtain_date', models.DateField(blank=True, null=True, verbose_name='Дата передачи водителю')),
                ('payed', models.BooleanField(default=False, verbose_name='Оплачен')),
                ('pay_date', models.DateField(blank=True, null=True, verbose_name='Дата оплаты')),
                ('scan', models.ImageField(blank=True, null=True, upload_to='scans/penalties/', verbose_name='Скан')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td.Driver', verbose_name='Водитель')),
            ],
            options={
                'verbose_name_plural': 'Штрафы',
                'verbose_name': 'Штраф',
            },
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('type', models.IntegerField(choices=[(0, 'Доверенность на управление'), (1, 'Доверенность на сервис'), (2, 'Доверенность на взаимодействие со страховой')], default=0, verbose_name='Тип доверенности')),
                ('scan', models.ImageField(blank=True, null=True, upload_to='scans/proxies/', verbose_name='Скан')),
                ('active', models.BooleanField(default=True, verbose_name='Активна')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Driver', verbose_name='Водитель')),
            ],
            options={
                'verbose_name_plural': 'Доверенности на вождение',
                'verbose_name': 'Доверенность на вождение',
            },
        ),
        migrations.CreateModel(
            name='TO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('mileage', models.IntegerField(default=0, verbose_name='Пробег')),
                ('fact', models.BooleanField(default=0, verbose_name='Пройдено')),
                ('budget', models.FloatField(default=0, verbose_name='Бюджет на ТО')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name_plural': 'Тех. обслуживание',
                'verbose_name': 'Тех. обслуживание',
            },
        ),
        migrations.CreateModel(
            name='VisitorsParking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('car_number', models.CharField(max_length=50, verbose_name='Номер автомобиля')),
                ('visitors_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Контрагент(гость)')),
                ('comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Комментарий')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Employee', verbose_name='Инициатор(работник НСД)')),
            ],
            options={
                'verbose_name_plural': 'Гостевые машиноместа',
                'verbose_name': 'Гостевой мешиноместо',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='drivers',
            field=models.ManyToManyField(blank=True, related_name='cars_driven', through='td.Proxy', to='td.Driver', verbose_name='Ответственный/водитель'),
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cars_owned', to='main.Employee', verbose_name='Руководитель/пассажир'),
        ),
        migrations.AddField(
            model_name='budgetvalue',
            name='car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td.Car', verbose_name='Автомобиль'),
        ),
    ]
